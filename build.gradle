plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group = 'info.itsthesky'

// Semantic Versioning
def major = '4'
def minor = '11'
def patch = '1'

def channel = ''
def channelVersion = ''

version = major + '.' + minor + '.' + patch + (channel ? '-' + channel + channelVersion : '')

repositories {
    mavenCentral()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://maven.enginehub.org/repo/' }
    maven { url = 'https://m2.dv8tion.net/releases' }
    maven { url = 'https://repo.skriptlang.org/releases' }
}

dependencies {
    shadow 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
    shadow 'com.github.SkriptLang:Skript:2.7.0-beta2'
    // Jetbrains Annotations
    shadow 'org.jetbrains:annotations:23.0.0'

    // Commits: com.github.dv8fromtheworld:jda
    // Stable: net.dv8tion:JDA
    implementation 'net.dv8tion:JDA:5.0.0-beta.9'

    // Class manipulation
    implementation 'net.bytebuddy:byte-buddy:1.11.22'
}

shadowJar {
    archiveName = 'DiSky ' + version + '.jar'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 1, 'minutes'
}

compileJava.options.encoding = 'UTF-8'